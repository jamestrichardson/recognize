apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "recognize.fullname" . }}-object-worker
  labels:
    {{- include "recognize.labels" . | nindent 4 }}
    app.kubernetes.io/component: object-worker
spec:
  {{- if not .Values.autoscaling.objectWorker.enabled }}
  replicas: {{ .Values.replicaCount.objectWorker }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "recognize.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: object-worker
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "recognize.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: object-worker
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "recognize.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: object-worker
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}-object-worker:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - celery
        - -A
        - app.celery_app
        - worker
        - --queues=object_detection
        - --concurrency={{ .Values.celery.workerConcurrency.object }}
        - --loglevel=info
        envFrom:
        - configMapRef:
            name: {{ include "recognize.fullname" . }}-config
        - secretRef:
            name: {{ include "recognize.fullname" . }}-secret
        resources:
          {{- toYaml .Values.resources.objectWorker | nindent 12 }}
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        {{- if .Values.persistence.models.enabled }}
        - name: models
          mountPath: /app/models
        {{- end }}
      volumes:
      - name: uploads
        {{- if .Values.persistence.uploads.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "recognize.fullname" . }}-uploads
        {{- else }}
        emptyDir: {}
        {{- end }}
      {{- if .Values.persistence.models.enabled }}
      - name: models
        persistentVolumeClaim:
          claimName: {{ include "recognize.fullname" . }}-models
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
