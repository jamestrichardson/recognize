apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "recognize.fullname" . }}-web
  labels:
    {{- include "recognize.labels" . | nindent 4 }}
    app.kubernetes.io/component: web
spec:
  {{- if not .Values.autoscaling.web.enabled }}
  replicas: {{ .Values.replicaCount.web }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "recognize.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: web
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "recognize.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: web
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "recognize.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: web
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.service.targetPort }}
          protocol: TCP
        envFrom:
        - configMapRef:
            name: {{ include "recognize.fullname" . }}-config
        - secretRef:
            name: {{ include "recognize.fullname" . }}-secret
        livenessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          {{- toYaml .Values.resources.web | nindent 12 }}
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        {{- if .Values.persistence.models.enabled }}
        - name: models
          mountPath: /app/models
        {{- end }}
      volumes:
      - name: uploads
        {{- if .Values.persistence.uploads.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "recognize.fullname" . }}-uploads
        {{- else }}
        emptyDir: {}
        {{- end }}
      {{- if .Values.persistence.models.enabled }}
      - name: models
        persistentVolumeClaim:
          claimName: {{ include "recognize.fullname" . }}-models
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
